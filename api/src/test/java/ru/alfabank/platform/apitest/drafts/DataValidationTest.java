package ru.alfabank.platform.apitest.drafts;import static io.restassured.RestAssured.given;import static org.hamcrest.Matchers.not;import static ru.alfabank.platform.businessobjects.CityGroup.getCityGroup;import static ru.alfabank.platform.businessobjects.Device.desktop;import static ru.alfabank.platform.helpers.TestDataHelper.DRAFT_CONTROLLER_URL;import static ru.alfabank.platform.helpers.TestDataHelper.getRequestSpecification;import static ru.alfabank.platform.helpers.TestDataHelper.getTestPage;import java.util.Collections;import org.testng.annotations.BeforeClass;import org.testng.annotations.Test;import ru.alfabank.platform.businessobjects.Entity;import ru.alfabank.platform.businessobjects.Method;import ru.alfabank.platform.businessobjects.draft.DataDraft;import ru.alfabank.platform.businessobjects.draft.WrapperDraft;/** * Тест валидации полей объекта data * и отсутствия факта сохранения черновика. */public class DataValidationTest extends BaseTest {  private WrapperDraft pageModifyBody;  private WrapperDraft widgetCreateBody;  private WrapperDraft widgetModifyBody;  private WrapperDraft widgetChangeLinksBody;  private WrapperDraft propertyCreateBody;  private WrapperDraft propertyModifyBody;  private WrapperDraft propertyValueCreateBody;  private WrapperDraft propertyValueModifyBody;  /**   * Invalid drafts generation.   */  @BeforeClass(      description = "Генерация невалидных черновиков")  public void makeDraft() {    pageModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().name("Name")                .dateFrom(dateFrom.toString()).dateTo(dateTo.toString()).device(desktop)                .enable(true).localization("RU").cityGroups(getCityGroup("ru")).build(),            Entity.page,            Method.changeLinks,            getTestPage().getId())));    widgetCreateBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.widget,            Method.create,            getTestPage().getId())));    widgetModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.widget,            Method.change,            getTestPage().getId())));    widgetChangeLinksBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().name("Name")                .dateFrom(dateFrom.toString()).dateTo(dateTo.toString()).device(desktop)                .enable(true).localization("RU").cityGroups(getCityGroup("ru")).build(),            Entity.widget,            Method.changeLinks,            getTestPage().getId())));    propertyCreateBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.property,            Method.create,            getTestPage().getId())));    propertyModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.property,            Method.change,            getTestPage().getId())));    propertyValueCreateBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.propertyValue,            Method.create,            getTestPage().getId())));    propertyValueModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.propertyValue,            Method.change,            getTestPage().getId())));  }  @Test(      description = "Проверка отказа сохранении черновика изменения Page с невалидной data",      groups = "Draft data validation")  public void pageChangeLinksValidationTest() {    given().spec(getRequestSpecification())        .body(pageModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL).then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновика создания Widget с невалидной data",      groups = "Draft data validation")  public void widgetCreateValidationTest() {    given().spec(getRequestSpecification())        .body(widgetCreateBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновика изменения Widget с невалидной data",      groups = "Draft data validation")  public void widgetModifyValidationTest() {    given().spec(getRequestSpecification())        .body(widgetModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновика"          + " изменения линков Widget с невалидной data",      groups = "Draft data validation")  public void widgetChangeLinksValidationTest() {    given().spec(getRequestSpecification())        .body(widgetChangeLinksBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновика создания Property с невалидной data",      groups = "Draft data validation")  public void propertyCreateValidationTest() {    given().spec(getRequestSpecification())        .body(propertyCreateBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновика изменения Property с невалидной data",      groups = "Draft data validation")  public void propertyModifyValidationTest() {    given().spec(getRequestSpecification())        .body(propertyModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновика создания Value с невалидной data",      groups = "Draft data validation")  public void propertyValueCreateValidationTest() {    given().spec(getRequestSpecification())        .body(propertyValueCreateBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновика изменения Value с невалидной data",      groups = "Draft data validation")  public void propertyValueModifyValidationTest() {    given().spec(getRequestSpecification())        .body(propertyValueModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }}