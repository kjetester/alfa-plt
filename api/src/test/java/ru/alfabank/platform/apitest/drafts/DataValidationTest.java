package ru.alfabank.platform.apitest.drafts;import org.testng.annotations.*;import ru.alfabank.platform.businessobjects.*;import ru.alfabank.platform.businessobjects.draft.*;import java.util.*;import static io.restassured.RestAssured.*;import static org.hamcrest.Matchers.*;import static org.hamcrest.Matchers.containsString;import static ru.alfabank.platform.businessobjects.CityGroup.getCityGroup;import static ru.alfabank.platform.businessobjects.Device.*;import static ru.alfabank.platform.helpers.TestDataHelper.*;/** * Тест валидации полей объекта data * и отсутствия факта сохранения черновика. */public class DataValidationTest extends BaseTest {  private WrapperDraft pageModifyBody;  private WrapperDraft pageModifyExtraFieldBody;  private WrapperDraft widgetCreateBody;  private WrapperDraft widgetCreateExtraFieldBody;  private WrapperDraft widgetModifyBody;  private WrapperDraft widgetModifyExtraFieldBody;  private WrapperDraft widgetChangeLinksBody;  private WrapperDraft widgetChangeLinksExtraFieldBody;  private WrapperDraft propertyCreateBody;  private WrapperDraft propertyCreateExtraFieldBody;  private WrapperDraft propertyModifyBody;  private WrapperDraft propertyModifyExtraFieldBody;  private WrapperDraft propertyValueCreateBody;  private WrapperDraft propertyValueCreateExtraFieldBody;  private WrapperDraft propertyValueModifyBody;  private WrapperDraft propertyValueModifyExtraFieldBody;  /**   * Invalid drafts generation.   */  @BeforeClass(      description = "Генерация невалидных черновиков")  public void makeDraft() {    pageModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().name("Name")                .dateFrom(dateFrom.toString()).dateTo(dateTo.toString()).device(desktop)                .enable(true).localization("RU").cityGroups(getCityGroup("ru")).build(),            Entity.page,            Method.changeLinks,            getTestPage().getId())));    pageModifyExtraFieldBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(getSwappedOutersWidgetsUidArray())                .extraField("extra").build(),            Entity.page,            Method.changeLinks,            getTestPage().getId())));    widgetCreateBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.widget,            Method.create,            getTestPage().getId())));    widgetCreateExtraFieldBody = new WrapperDraft(new ArrayList<>(Arrays.asList(        new WrapperDraft.OperationDraft(new DataDraft.DataDraftBuilder().name("Name").enable(true)            .localization("RU").device(desktop).dateFrom(dateFrom.toString())            .dateTo(dateTo.toString()).extraField("extra").cityGroups(getCityGroup("ru"))            .build(),            Entity.widget,            Method.create,            getTestPage().getId()),        new WrapperDraft.OperationDraft(new DataDraft.DataDraftBuilder()            .childUids(putNewChildWidgetToParentWidget(getNewUuid())).build(),            Entity.widget, Method.changeLinks, getTestWidget().getUid()))));    widgetModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.widget,            Method.change,            getTestPage().getId())));    widgetModifyExtraFieldBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().name("Name").enable(true)                .localization("RU").device(desktop).dateFrom(dateFrom.toString())                .dateTo(dateTo.toString()).extraField("extra")                .cityGroups(getCityGroup("ru")).build(),            Entity.widget,            Method.change,            getTestPage().getId()        )));    widgetChangeLinksBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().name("Name")                .dateFrom(dateFrom.toString()).dateTo(dateTo.toString()).device(desktop)                .enable(true).localization("RU").cityGroups(getCityGroup("ru")).build(),            Entity.widget,            Method.changeLinks,            getTestPage().getId())));    widgetChangeLinksExtraFieldBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder()                .childUids(putNewChildWidgetToParentWidget(getNewUuid())).extraField("extra")                .build(),            Entity.widget,            Method.changeLinks,            getTestWidget().getUid())));    propertyCreateBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.property,            Method.create,            getNewUuid())));    String newPropertyUid = getNewUuid();    propertyCreateExtraFieldBody = new WrapperDraft(new ArrayList<>(Arrays.asList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().forWidget(getTestWidget().getUid()).name("Name")                .device(desktop).extraField("extra").build(),            Entity.property,            Method.create,            newPropertyUid),        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().forProperty(newPropertyUid).value("value")                .cityGroups(getCityGroup("ru")).build(),            Entity.propertyValue,            Method.create,            getNewUuid()))));    propertyModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.property,            Method.change,            getTestProperty().getUid())));    propertyModifyExtraFieldBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().forWidget(getTestWidget().getUid()).name("Name")                .device(desktop).extraField("extra").build(),            Entity.property,            Method.change,            getTestProperty().getUid())));    propertyValueCreateBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.propertyValue,            Method.create,            getNewUuid())));    propertyValueCreateExtraFieldBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().forProperty(getTestProperty().getUid()).value("value")                .cityGroups(getCityGroup("ru")).extraField("extra").build(),            Entity.propertyValue,            Method.create,            getNewUuid())));    propertyValueModifyBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().childUids(new String[]{""}).build(),            Entity.propertyValue,            Method.change,            getTestPropertyValue().getUid())));    propertyValueModifyExtraFieldBody = new WrapperDraft(Collections.singletonList(        new WrapperDraft.OperationDraft(            new DataDraft.DataDraftBuilder().forProperty(getTestProperty().getUid()).value("value")                .cityGroups(getCityGroup("ru")).extraField("extra").build(),            Entity.propertyValue,            Method.change,            getTestPropertyValue().getUid())));  }  @Test(      description = "Проверка отказа в сохранении черновика изменения Page с невалидной data",      groups = "Draft data validation")  public void pageChangeLinksValidationTest() {    given().spec(getRequestSpecification())        .body(pageModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL).then().log().all().statusCode(400)        .body(containsString("childUids"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа в сохранении черновика создания Widget с невалидной data",      groups = "Draft data validation")  public void widgetCreateValidationTest() {    given().spec(getRequestSpecification())        .body(widgetCreateBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400)        .body(            containsString("name"),            containsString("enable"),            containsString("localization"),            containsString("device"),            containsString("cityGroup"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа в сохранении черновика изменения Widget с невалидной data",      groups = "Draft data validation")  public void widgetModifyValidationTest() {    given().spec(getRequestSpecification())        .body(widgetModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400)        .body(            containsString("name"),            containsString("enable"),            containsString("localization"),            containsString("device"),            containsString("cityGroup"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа в сохранении черновика изменения положения Widget с невалидной data",      groups = "Draft data validation")  public void widgetChangeLinksValidationTest() {    given().spec(getRequestSpecification())        .body(widgetChangeLinksBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400)        .body(containsString("childUids"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа в сохранении черновика создания Property с невалидной data",      groups = "Draft data validation")  public void propertyCreateValidationTest() {    given().spec(getRequestSpecification())        .body(propertyCreateBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400)        .body(            containsString("widgetUid"),            containsString("name"),            containsString("device"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа в сохранении черновика изменения Property с невалидной data",      groups = "Draft data validation")  public void propertyModifyValidationTest() {    given().spec(getRequestSpecification())        .body(propertyModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400)        .body(            containsString("widgetUid"),            containsString("name"),            containsString("device"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа в сохранении черновика создания Value с невалидной data",      groups = "Draft data validation")  public void propertyValueCreateValidationTest() {    given().spec(getRequestSpecification())        .body(propertyValueCreateBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400)        .body(            containsString("propertyUid"),            containsString("value"),            containsString("cityGroups"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа в сохранении черновика изменения Value с невалидной data",      groups = "Draft data validation")  public void propertyValueModifyValidationTest() {    given().spec(getRequestSpecification())        .body(propertyValueModifyBody).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().all().statusCode(400)        .body(            containsString("propertyUid"),            containsString("value"),            containsString("cityGroups"));    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(404)).statusCode(404);  }  @Test(      description = "Проверка отказа сохранении черновиков с лишним полем в data",      groups = "Draft data validation",      dataProvider = "Body provider",      priority = 1)  public void propertyValueModifyWithExtraFieldValidationTest(WrapperDraft body) {    given().spec(getRequestSpecification())        .body(body).pathParam("pageId", getTestPage().getId())        .when().put(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(200)).statusCode(200);    given().spec(getRequestSpecification()).pathParam("pageId", getTestPage().getId())        .when().get(DRAFT_CONTROLLER_URL)        .then().log().ifStatusCodeMatches(not(200)).statusCode(200)        .body(not(containsString("extra")));  }  /**   * Data Provider for propertyValueModifyWithExtraFieldValidationTest.   * @return body   */  @DataProvider(name = "Body provider")  public Object[][] bodyProvider() {    return new Object[][]{      {pageModifyExtraFieldBody},      {widgetCreateExtraFieldBody},      {widgetModifyExtraFieldBody},      {widgetChangeLinksExtraFieldBody},      {propertyCreateExtraFieldBody},      {propertyModifyExtraFieldBody},      {propertyValueCreateExtraFieldBody},      {propertyValueModifyExtraFieldBody}    };  }}